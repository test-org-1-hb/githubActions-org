name: K8sGPT (Ollama) Analysis Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # ============================================
  # JOB 1: Pre-Deployment Manifest Scan
  # ============================================
  scan-manifests:
    name: "Scan K8s Manifests (Ollama)"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      
      - name: "Install kubectl"
        run: |
          curl -LO "https://dl.k8s.io/release/v1.31.1/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
      
      - name: "Install Kind"
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.24.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/
      
      - name: "Install and Run Ollama"
        run: |
          curl -fsSL https://ollama.com/install.sh | sh
          ollama serve &
          sleep 15
        
      - name: "Pull Ollama Model"
        run: |
          ollama pull llama2
      
      - name: "Install K8sGPT"
        run: |
          curl -LO https://github.com/k8sgpt-ai/k8sgpt/releases/download/v0.4.25/k8sgpt_amd64.deb
          sudo dpkg -i k8sgpt_amd64.deb || sudo apt-get install -f -y
      
      - name: "Configure K8sGPT for Ollama"
        run: |
          k8sgpt auth add --backend ollama --model llama2 --baseurl http://localhost:11434
          k8sgpt auth default --provider ollama
      
      - name: "Create temporary Kind cluster"
        run: |
          kind create cluster --name k8sgpt-scan
      
      - name: "Deploy manifests to temp cluster"
        run: |
          kubectl apply -f ./k8s
      
      - name: "Wait for deployment to stabilize"
        run: |
          echo "Waiting 90 seconds for resources to initialize and fail (if issues)..."
          sleep 90
      
      - name: "Check Pod status before analysis"
        run: |
          echo "Pod status:"
          kubectl get pods -o wide
      
      - name: "Analyze temp cluster deployment"
        run: |
          echo "Scanning the 'default' namespace with Ollama..."
          output=$(k8sgpt analyze -v --namespace=default --explain --backend ollama 2>&1)
          echo "$output"
          if echo "$output" | grep -iqE "(error|issue|problem)"; then
            echo "Issues found in analysisâ€”failing job."
            exit 1
          else
            echo "No critical issues found."
          fi
      
      - name: "Cleanup temp cluster"
        if: always()
        run: |
          kind delete cluster --name k8sgpt-scan


